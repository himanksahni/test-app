{"ast":null,"code":"var _jsxFileName = \"/Users/himank/Desktop/PROJECTS/react_node_test/job-test/src/components/survey/survey.js\";\nimport React from 'react';\nimport AssignedSurveys from './assigned_surveys';\nimport SurveyList from './survey_list';\n\nclass Survey extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      surveys: this.props.empSur,\n      assignedSurveys: this.props.empAss,\n      employees: this.props.employees,\n      employee: this.props.employee\n    };\n    this.assignSurvey = this.assignSurvey.bind(this);\n    this.removeSurvey = this.removeSurvey.bind(this);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props !== prevProps) {\n      this.setState({\n        surveys: this.props.empSur,\n        assignedSurveys: this.props.empAss,\n        employees: this.props.employees,\n        employee: this.props.employee\n      });\n    }\n\n    console.log(this.state);\n  }\n\n  assignSurvey(sid) {\n    let newSurvey = \"\";\n    var indx;\n\n    for (indx in this.state.surveys) {\n      if (this.state.surveys[indx].sid === sid) {\n        newSurvey = this.state.surveys[indx];\n      }\n    }\n\n    let newAss = [...this.state.assignedSurveys, newSurvey];\n    let newSurList = this.state.surveys.filter(survey => {\n      return survey.sid !== sid;\n    });\n    this.setState({\n      surveys: newSurList,\n      assignedSurveys: newAss\n    });\n    console.log(this.state.employees); // this.state.employee.assSur.push(sid)\n    // console.log(this.state.employee)\n  }\n\n  removeSurvey(sid) {\n    let newSurvey = \"\";\n    var indx;\n\n    for (indx in this.state.assignedSurveys) {\n      if (this.state.assignedSurveys[indx].sid === sid) {\n        newSurvey = this.state.assignedSurveys[indx];\n      }\n    }\n\n    let newSurrList = [...this.state.surveys, newSurvey];\n    let newAss = this.state.assignedSurveys.filter(survey => {\n      return survey.sid !== sid;\n    });\n    this.setState({\n      surveys: newSurrList,\n      assignedSurveys: newAss\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SurveyList, {\n      surveys: this.state.surveys,\n      addSurvey: this.assignSurvey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(AssignedSurveys, {\n      assSurveys: this.state.assignedSurveys,\n      removeSurvey: this.removeSurvey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default Survey;","map":{"version":3,"sources":["/Users/himank/Desktop/PROJECTS/react_node_test/job-test/src/components/survey/survey.js"],"names":["React","AssignedSurveys","SurveyList","Survey","Component","constructor","props","state","surveys","empSur","assignedSurveys","empAss","employees","employee","assignSurvey","bind","removeSurvey","componentDidUpdate","prevProps","setState","console","log","sid","newSurvey","indx","newAss","newSurList","filter","survey","newSurrList","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport AssignedSurveys from './assigned_surveys';\nimport SurveyList from './survey_list';\n\nclass Survey extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            surveys: this.props.empSur,\n            assignedSurveys: this.props.empAss,\n            employees: this.props.employees,\n            employee: this.props.employee\n        }\n        this.assignSurvey = this.assignSurvey.bind(this)\n        this.removeSurvey = this.removeSurvey.bind(this)\n    }\n\n    componentDidUpdate(prevProps){\n        if(this.props !== prevProps){\n         this.setState({\n          surveys:this.props.empSur,\n          assignedSurveys: this.props.empAss,\n          employees: this.props.employees,\n          employee: this.props.employee\n         })\n        }\n        console.log(this.state)\n    }\n\n    assignSurvey(sid){\n        let newSurvey = \"\"\n        var indx\n        for (indx in this.state.surveys){\n            if (this.state.surveys[indx].sid === sid){\n                newSurvey = this.state.surveys[indx]\n            }\n        }\n        let newAss = [...this.state.assignedSurveys, newSurvey]\n        let newSurList = this.state.surveys.filter(survey=>{\n           return survey.sid!==sid\n        })\n\n        this.setState({\n            surveys: newSurList,\n            assignedSurveys: newAss})\n\n        console.log(this.state.employees)\n        // this.state.employee.assSur.push(sid)\n        // console.log(this.state.employee)\n\n    }\n\n    removeSurvey(sid){\n        let newSurvey = \"\"\n        var indx\n        for (indx in this.state.assignedSurveys){\n            if (this.state.assignedSurveys[indx].sid === sid){\n                newSurvey = this.state.assignedSurveys[indx]\n            }\n        }\n        let newSurrList = [...this.state.surveys, newSurvey]\n        let newAss = this.state.assignedSurveys.filter(survey=>{\n           return survey.sid!==sid\n        })\n\n        this.setState({\n            surveys: newSurrList,\n            assignedSurveys: newAss})\n\n\n    }\n\n    render(){\n        return(\n            <div className=\"columns\">\n                    <SurveyList surveys={this.state.surveys} addSurvey = {this.assignSurvey}/>\n                    <AssignedSurveys assSurveys={this.state.assignedSurveys} removeSurvey={this.removeSurvey}/>\n\n            </div>\n        )\n    }\n}\n\nexport default Survey"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/himank/Desktop/PROJECTS/react_node_test/job-test/src/components/employye/employee.js\";\nimport React from 'react';\nimport Survey from '../survey/survey';\nimport axios from 'axios'; // let employee= [\n//     {assSur:[1,2,7], name:'Employee 1', eid:1}, \n//     {assSur:[3,4,5], name:'Employee 2', eid:1}, \n//     {assSur:[], name:'Employee 3', eid:1},]\n// let surveys= [\n//         {sid:1, name:'survey 1', eid:1}, \n//         {sid:2, name:'survey 2', eid:1}, \n//         {sid:3, name:'survey 3', eid:1},\n//         {sid:4, name:'survey 4', eid:1},\n//         {sid:5, name:'survey 5', eid:1},\n//         {sid:6, name:'survey 6', eid:1},\n//         {sid:7, name:'survey 7', eid:1},\n//         {sid:8, name:'man 8', eid:1}]\n\nlet assSurveys = [];\n\nclass Employee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      employees: employee,\n      surveysList: surveys,\n      assSurveys: assSurveys,\n      empSur: [],\n      empAss: [],\n      value: -1\n    };\n    this.changeEmp = this.changeEmp.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:7000/employees').then(res => this.setState({\n      employees: res.data\n    })).catch(err => console.log(err));\n    axios.get('http://localhost:7000/surveys').then(res => this.setState({\n      surveysList: res.data\n    })).catch(err => console.log(err));\n  }\n\n  changeEmp(e) {\n    this.setState({\n      value: e.target.value\n    });\n\n    if (e.target.value == -1) {\n      this.setState({\n        empSur: [],\n        empAss: []\n      });\n      return;\n    }\n\n    employee = this.state.employees[e.target.value];\n    let sur = [...this.state.surveysList];\n    let surcopy = [];\n    let assSur = [];\n    let empAss = [];\n\n    for (let i in employee.assSur) {\n      empAss.push(employee.assSur[i]);\n    }\n\n    for (let i in sur) {\n      if (empAss.includes(sur[i].sid)) {\n        assSur.push(sur[i]);\n      }\n    }\n\n    for (let i in sur) {\n      if (!empAss.includes(sur[i].sid)) {\n        surcopy.push(sur[i]);\n      }\n    }\n\n    this.setState({\n      empSur: surcopy,\n      empAss: assSur\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns is-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"employee has-text-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }, \"Select Employee\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.changeEmp,\n      value: this.state.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, \"Select Employee\"), this.state.employees.map((employee, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 40\n        }\n      }, employee.name);\n    }))))), /*#__PURE__*/React.createElement(Survey, {\n      empSur: this.state.empSur,\n      empAss: this.state.empAss,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Employee;","map":{"version":3,"sources":["/Users/himank/Desktop/PROJECTS/react_node_test/job-test/src/components/employye/employee.js"],"names":["React","Survey","axios","assSurveys","Employee","Component","constructor","props","state","employees","employee","surveysList","surveys","empSur","empAss","value","changeEmp","bind","componentDidMount","get","then","res","setState","data","catch","err","console","log","e","target","sur","surcopy","assSur","i","push","includes","sid","render","map","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Survey from '../survey/survey';\nimport axios from 'axios';\n\n// let employee= [\n//     {assSur:[1,2,7], name:'Employee 1', eid:1}, \n//     {assSur:[3,4,5], name:'Employee 2', eid:1}, \n//     {assSur:[], name:'Employee 3', eid:1},]\n\n// let surveys= [\n//         {sid:1, name:'survey 1', eid:1}, \n//         {sid:2, name:'survey 2', eid:1}, \n//         {sid:3, name:'survey 3', eid:1},\n//         {sid:4, name:'survey 4', eid:1},\n//         {sid:5, name:'survey 5', eid:1},\n//         {sid:6, name:'survey 6', eid:1},\n//         {sid:7, name:'survey 7', eid:1},\n//         {sid:8, name:'man 8', eid:1}]\n    \nlet assSurveys=[]\n\nclass Employee extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            employees: employee,\n            surveysList: surveys,\n            assSurveys : assSurveys,\n            empSur:[],\n            empAss:[],\n            value : -1\n        }\n        this.changeEmp = this.changeEmp.bind(this)\n    }\n\n    componentDidMount(){\n        axios.get('http://localhost:7000/employees')\n        .then(res => this.setState({employees: res.data}))\n        .catch(err => console.log(err))\n\n        axios.get('http://localhost:7000/surveys')\n        .then(res => this.setState({ surveysList: res.data}))\n        .catch(err => console.log(err))\n    }\n\n    changeEmp(e){\n\n        this.setState({ value: e.target.value})\n        if(e.target.value == -1){\n            this.setState({\n                empSur: [],\n                empAss: []\n            })\n            return\n        }\n\n        employee = this.state.employees[e.target.value]\n        let sur = [...this.state.surveysList]\n        let surcopy = []\n        let assSur=[]\n        let empAss = [] \n\n        for (let i in employee.assSur){\n            empAss.push(employee.assSur[i])\n        }\n\n        for (let i in sur){\n            if (empAss.includes(sur[i].sid)){\n                assSur.push(sur[i])\n            }\n        }\n\n        for (let i in sur){\n            if (!empAss.includes(sur[i].sid)){\n                surcopy.push(sur[i])\n            }\n        }\n\n        this.setState({\n            empSur:surcopy,\n            empAss:assSur\n        })\n\n    }\n\n\n    render(){\n    return(\n        <div>\n            <div className=\"columns is-centered\">\n                <div className=\"employee has-text-centered\">\n                <h3>Select Employee</h3>\n                    <div class=\"select\">\n                        <select onChange={this.changeEmp} value={this.state.value}>\n                            <option value={-1}>Select Employee</option>\n                            { this.state.employees.map((employee,i) => {\n                                return <option value={i}>{employee.name}</option>\n                            })}\n                        </select>\n                        </div>\n                </div>\n            </div>\n\n            <Survey empSur={this.state.empSur} \n                    empAss={this.state.empAss}/>\n        </div>\n    )\n    }\n}\n\nexport default Employee;\n"]},"metadata":{},"sourceType":"module"}
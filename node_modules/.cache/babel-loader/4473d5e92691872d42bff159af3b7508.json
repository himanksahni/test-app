{"ast":null,"code":"var _jsxFileName = \"/Users/himank/Desktop/PROJECTS/react_node_test/job-test/src/components/survey/survey.js\";\nimport React from 'react';\nimport AssignedSurveys from './assigned_surveys';\nimport SurveyList from './survey_list';\nlet surveys = [{\n  sid: 1,\n  name: 'survey 1',\n  eid: 1\n}, {\n  sid: 2,\n  name: 'survey 2',\n  eid: 1\n}, {\n  sid: 3,\n  name: 'survey 3',\n  eid: 1\n}, {\n  sid: 4,\n  name: 'survey 4',\n  eid: 1\n}, {\n  sid: 5,\n  name: 'survey 5',\n  eid: 1\n}, {\n  sid: 6,\n  name: 'survey 6',\n  eid: 1\n}];\nlet assignedSurveys = [{\n  sid: 7,\n  name: 'survey 7',\n  eid: 1\n}];\n\nclass Survey extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      surveys: surveys,\n      assignedSurveys: assignedSurveys\n    };\n    this.assignSurvey = this.assignSurvey.bind(this);\n  }\n\n  assignSurvey(sid) {\n    sid = parseInt(sid);\n    let addSurvey = \"\";\n    var indx;\n\n    for (indx in this.state.surveys) {\n      if (this.state.surveys[indx].sid === sid) {\n        console.log(sid);\n        addSurvey = this.state.surveys[indx];\n      }\n    }\n\n    let newAss = [...this.state.assignedSurveys, addSurvey];\n    this.setState(assSurveys);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(SurveyList, {\n      surveys: this.state.surveys,\n      addSurvey: this.assignSurvey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(AssignedSurveys, {\n      assSurveys: this.state.assignedSurveys,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default Survey;","map":{"version":3,"sources":["/Users/himank/Desktop/PROJECTS/react_node_test/job-test/src/components/survey/survey.js"],"names":["React","AssignedSurveys","SurveyList","surveys","sid","name","eid","assignedSurveys","Survey","Component","constructor","props","state","assignSurvey","bind","parseInt","addSurvey","indx","console","log","newAss","setState","assSurveys","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,eAAP,MAA4B,oBAA5B;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,IAAIC,OAAO,GAAE,CACT;AAACC,EAAAA,GAAG,EAAC,CAAL;AAAQC,EAAAA,IAAI,EAAC,UAAb;AAAyBC,EAAAA,GAAG,EAAC;AAA7B,CADS,EAET;AAACF,EAAAA,GAAG,EAAC,CAAL;AAAQC,EAAAA,IAAI,EAAC,UAAb;AAAyBC,EAAAA,GAAG,EAAC;AAA7B,CAFS,EAGT;AAACF,EAAAA,GAAG,EAAC,CAAL;AAAQC,EAAAA,IAAI,EAAC,UAAb;AAAyBC,EAAAA,GAAG,EAAC;AAA7B,CAHS,EAIT;AAACF,EAAAA,GAAG,EAAC,CAAL;AAAQC,EAAAA,IAAI,EAAC,UAAb;AAAyBC,EAAAA,GAAG,EAAC;AAA7B,CAJS,EAKT;AAACF,EAAAA,GAAG,EAAC,CAAL;AAAQC,EAAAA,IAAI,EAAC,UAAb;AAAyBC,EAAAA,GAAG,EAAC;AAA7B,CALS,EAMT;AAACF,EAAAA,GAAG,EAAC,CAAL;AAAQC,EAAAA,IAAI,EAAC,UAAb;AAAyBC,EAAAA,GAAG,EAAC;AAA7B,CANS,CAAb;AAQA,IAAIC,eAAe,GAAC,CAAC;AAACH,EAAAA,GAAG,EAAC,CAAL;AAAQC,EAAAA,IAAI,EAAC,UAAb;AAAyBC,EAAAA,GAAG,EAAC;AAA7B,CAAD,CAApB;;AAEA,MAAME,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAoC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTT,MAAAA,OAAO,EAAEA,OADA;AAETI,MAAAA,eAAe,EAAEA;AAFR,KAAb;AAIA,SAAKM,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACT,GAAD,EAAK;AACbA,IAAAA,GAAG,GAAGW,QAAQ,CAACX,GAAD,CAAd;AACA,QAAIY,SAAS,GAAG,EAAhB;AACA,QAAIC,IAAJ;;AACA,SAAKA,IAAL,IAAa,KAAKL,KAAL,CAAWT,OAAxB,EAAgC;AAC5B,UAAI,KAAKS,KAAL,CAAWT,OAAX,CAAmBc,IAAnB,EAAyBb,GAAzB,KAAiCA,GAArC,EAAyC;AACrCc,QAAAA,OAAO,CAACC,GAAR,CAAYf,GAAZ;AACAY,QAAAA,SAAS,GAAG,KAAKJ,KAAL,CAAWT,OAAX,CAAmBc,IAAnB,CAAZ;AACH;AACJ;;AAED,QAAIG,MAAM,GAAG,CAAC,GAAG,KAAKR,KAAL,CAAWL,eAAf,EAAgCS,SAAhC,CAAb;AACA,SAAKK,QAAL,CAAcC,UAAd;AAEH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAE,KAAKX,KAAL,CAAWT,OAAhC;AAAyC,MAAA,SAAS,EAAI,KAAKU,YAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADR,eAEQ,oBAAC,eAAD;AAAiB,MAAA,UAAU,EAAE,KAAKD,KAAL,CAAWL,eAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,CADJ;AAOH;;AAnC+B;;AAsCpC,eAAeC,MAAf","sourcesContent":["import React from 'react';\nimport AssignedSurveys from './assigned_surveys';\nimport SurveyList from './survey_list';\n\nlet surveys= [\n    {sid:1, name:'survey 1', eid:1}, \n    {sid:2, name:'survey 2', eid:1}, \n    {sid:3, name:'survey 3', eid:1},\n    {sid:4, name:'survey 4', eid:1},\n    {sid:5, name:'survey 5', eid:1},\n    {sid:6, name:'survey 6', eid:1}]\n\nlet assignedSurveys=[{sid:7, name:'survey 7', eid:1}]\n\nclass Survey extends React.Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            surveys: surveys,\n            assignedSurveys: assignedSurveys\n        }\n        this.assignSurvey = this.assignSurvey.bind(this)\n    }\n\n    assignSurvey(sid){\n        sid = parseInt(sid)\n        let addSurvey = \"\"\n        var indx\n        for (indx in this.state.surveys){\n            if (this.state.surveys[indx].sid === sid){\n                console.log(sid)\n                addSurvey = this.state.surveys[indx]\n            }\n        }\n        \n        let newAss = [...this.state.assignedSurveys, addSurvey]\n        this.setState(assSurveys)\n\n    }\n\n    render(){\n        return(\n            <div className=\"columns\">\n                    <SurveyList surveys={this.state.surveys} addSurvey = {this.assignSurvey}/>\n                    <AssignedSurveys assSurveys={this.state.assignedSurveys}/>\n\n            </div>\n        )\n    }\n}\n\nexport default Survey"]},"metadata":{},"sourceType":"module"}
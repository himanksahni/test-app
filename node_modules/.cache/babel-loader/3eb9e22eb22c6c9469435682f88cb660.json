{"ast":null,"code":"var _jsxFileName = \"/Users/himank/Desktop/PROJECTS/react_node_test/job-test/src/components/employye/employee.js\";\nimport React from 'react';\nimport Survey from '../survey/survey';\nimport axios from 'axios';\nlet employee = [{\n  assSur: [1, 2, 7],\n  name: 'Employee 1',\n  eid: 1\n}, {\n  assSur: [3, 4, 5],\n  name: 'Employee 2',\n  eid: 1\n}, {\n  assSur: [],\n  name: 'Employee 3',\n  eid: 1\n}];\nlet surveys = [{\n  sid: 1,\n  name: 'survey 1',\n  eid: 1\n}, {\n  sid: 2,\n  name: 'survey 2',\n  eid: 1\n}, {\n  sid: 3,\n  name: 'survey 3',\n  eid: 1\n}, {\n  sid: 4,\n  name: 'survey 4',\n  eid: 1\n}, {\n  sid: 5,\n  name: 'survey 5',\n  eid: 1\n}, {\n  sid: 6,\n  name: 'survey 6',\n  eid: 1\n}, {\n  sid: 7,\n  name: 'survey 7',\n  eid: 1\n}, {\n  sid: 8,\n  name: 'man 8',\n  eid: 1\n}];\nlet assSurveys = [];\n\nclass Employee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      employees: employee,\n      surveysList: surveys,\n      assSurveys: assSurveys,\n      empSur: [],\n      empAss: [],\n      value: -1\n    };\n    this.changeEmp = this.changeEmp.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get('http://localhost:7000/employee').then(res => console.log(res.data)).catch(err => console.log(err));\n  }\n\n  changeEmp(e) {\n    this.setState({\n      value: e.target.value\n    });\n\n    if (e.target.value == -1) {\n      this.setState({\n        empSur: [],\n        empAss: []\n      });\n      return;\n    }\n\n    employee = this.state.employees[e.target.value];\n    let sur = [...this.state.surveysList];\n    let surcopy = [];\n    let assSur = [];\n    let empAss = [];\n\n    for (let i in employee.assSur) {\n      empAss.push(employee.assSur[i]);\n    }\n\n    for (let i in sur) {\n      if (empAss.includes(sur[i].sid)) {\n        assSur.push(sur[i]);\n      }\n    }\n\n    for (let i in sur) {\n      if (!empAss.includes(sur[i].sid)) {\n        surcopy.push(sur[i]);\n      }\n    }\n\n    this.setState({\n      empSur: surcopy,\n      empAss: assSur\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"columns is-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"employee has-text-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }, \"Select Employee\"), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"select\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.changeEmp,\n      value: this.state.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: -1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 29\n      }\n    }, \"Select Employee\"), this.state.employees.map((employee, i) => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 40\n        }\n      }, employee.name);\n    }))))), /*#__PURE__*/React.createElement(Survey, {\n      empSur: this.state.empSur,\n      empAss: this.state.empAss,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nexport default Employee;","map":{"version":3,"sources":["/Users/himank/Desktop/PROJECTS/react_node_test/job-test/src/components/employye/employee.js"],"names":["React","Survey","axios","employee","assSur","name","eid","surveys","sid","assSurveys","Employee","Component","constructor","props","state","employees","surveysList","empSur","empAss","value","changeEmp","bind","componentDidMount","get","then","res","console","log","data","catch","err","e","setState","target","sur","surcopy","i","push","includes","render","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Survey from '../survey/survey';\nimport axios from 'axios';\n\nlet employee= [\n    {assSur:[1,2,7], name:'Employee 1', eid:1}, \n    {assSur:[3,4,5], name:'Employee 2', eid:1}, \n    {assSur:[], name:'Employee 3', eid:1},]\n\nlet surveys= [\n        {sid:1, name:'survey 1', eid:1}, \n        {sid:2, name:'survey 2', eid:1}, \n        {sid:3, name:'survey 3', eid:1},\n        {sid:4, name:'survey 4', eid:1},\n        {sid:5, name:'survey 5', eid:1},\n        {sid:6, name:'survey 6', eid:1},\n        {sid:7, name:'survey 7', eid:1},\n        {sid:8, name:'man 8', eid:1}]\n    \nlet assSurveys=[]\n\nclass Employee extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            employees: employee,\n            surveysList: surveys,\n            assSurveys : assSurveys,\n            empSur:[],\n            empAss:[],\n            value : -1\n        }\n        this.changeEmp = this.changeEmp.bind(this)\n    }\n\n    componentDidMount(){\n        axios.get('http://localhost:7000/employee')\n        .then(res => console.log(res.data))\n        .catch(err => console.log(err))\n    }\n\n    changeEmp(e){\n\n        this.setState({ value: e.target.value})\n        if(e.target.value == -1){\n            this.setState({\n                empSur: [],\n                empAss: []\n            })\n            return\n        }\n\n        employee = this.state.employees[e.target.value]\n        let sur = [...this.state.surveysList]\n        let surcopy = []\n        let assSur=[]\n        let empAss = [] \n\n        for (let i in employee.assSur){\n            empAss.push(employee.assSur[i])\n        }\n\n        for (let i in sur){\n            if (empAss.includes(sur[i].sid)){\n                assSur.push(sur[i])\n            }\n        }\n\n        for (let i in sur){\n            if (!empAss.includes(sur[i].sid)){\n                surcopy.push(sur[i])\n            }\n        }\n\n        this.setState({\n            empSur:surcopy,\n            empAss:assSur\n        })\n\n    }\n\n\n    render(){\n    return(\n        <div>\n            <div className=\"columns is-centered\">\n                <div className=\"employee has-text-centered\">\n                <h3>Select Employee</h3>\n                    <div class=\"select\">\n                        <select onChange={this.changeEmp} value={this.state.value}>\n                            <option value={-1}>Select Employee</option>\n                            { this.state.employees.map((employee,i) => {\n                                return <option value={i}>{employee.name}</option>\n                            })}\n                        </select>\n                        </div>\n                </div>\n            </div>\n\n            <Survey empSur={this.state.empSur} \n                    empAss={this.state.empAss}/>\n        </div>\n    )\n    }\n}\n\nexport default Employee;\n"]},"metadata":{},"sourceType":"module"}